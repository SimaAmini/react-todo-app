{"version":3,"sources":["components/footer/index.js","components/header/index.js","services/localstorage.service.js","components/actions/index.js","components/add-task/index.jsx","components/buttons/done.jsx","components/buttons/delete.jsx","components/task/index.jsx","components/tasks/index.jsx","components/content/index.js","components/task-detail/index.js","components/not-found/index.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","href","target","rel","aria-label","role","viewBox","xmlns","style","maxWidth","d","Header","name","setData","data","localStorage","setItem","JSON","stringify","getData","parse","getItem","clear","Actions","onToggleAllStatus","onDeleteAll","onClick","AddTask","state","text","handleSubmit","event","preventDefault","props","OnAddTask","setState","handleChange","e","currentTarget","value","onSubmit","this","type","onChange","Component","DoneButton","task","onDone","Fragment","isDone","DeleteButton","onDelete","id","Task","textDecoration","checkState","to","Tasks","tasks","map","key","Content","handleDone","index","indexOf","localstorageService","handleDelete","clean_tasks","filter","handleAddTask","Date","getTime","isDeleted","isImportant","comment","created_at","toLocaleString","updated_at","handleToggleAllStatus","status","handleDeleteAll","loadTasks","length","TaskDetail","console","log","findIndex","t","history","goBack","populateTask","match","params","getTask","response","replace","find","Number","NotFound","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a0cfd4d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div>\r\n        <a\r\n          href=\"\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          aria-label=\"View source on Github\"\r\n        >\r\n          <svg\r\n            role=\"img\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{ maxWidth: '25' }}\r\n          >\r\n            <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return <header className=\"header\">React Todo App</header>;\r\n};\r\n\r\nexport default Header;\r\n","const name = 'tasks';\r\n\r\nfunction setData(data) {\r\n  localStorage.setItem(name, JSON.stringify(data));\r\n}\r\nfunction getData() {\r\n  return JSON.parse(localStorage.getItem(name));\r\n}\r\nfunction clear() {\r\n  localStorage.clear(name);\r\n}\r\nexport default {\r\n  setData,\r\n  getData,\r\n  clear\r\n};\r\n","import React from 'react';\r\n\r\nconst Actions = ({ onToggleAllStatus, onDeleteAll }) => {\r\n  return (\r\n    <div className=\"action-block\">\r\n      <span className=\"action-link\" onClick={() => onToggleAllStatus(true)}>\r\n        Done All\r\n      </span>\r\n      <span className=\"action-link\" onClick={() => onToggleAllStatus(false)}>\r\n        un-Done All\r\n      </span>\r\n      <span className=\"action-link\" onClick={onDeleteAll}>\r\n        Delete All\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { Component } from 'react';\r\n\r\nexport class AddTask extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.OnAddTask(this.state.text);\r\n    this.setState({ text: '' });\r\n  };\r\n  handleChange = e => {\r\n    let text = { ...this.state.text };\r\n    text = e.currentTarget.value;\r\n    this.setState({ text });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            className=\"main-input\"\r\n            value={this.state.text}\r\n            name=\"text\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\n\r\nconst DoneButton = ({ task, onDone }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        <button className=\"task__btn\" onClick={() => onDone(task)}>\r\n          {task.isDone ? 'un-done' : 'Done'}\r\n        </button>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoneButton;\r\n","import React from 'react';\r\n\r\nconst DeleteButton = ({ task, onDelete }) => {\r\n  return (\r\n    <button className=\"task__btn\" onClick={() => onDelete(task.id)}>\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//components\r\nimport DoneButton from '../buttons/done';\r\nimport DeleteButton from '../buttons/delete';\r\n\r\nconst Task = ({ task, onDelete, onDone }) => {\r\n  const checkState = task => {\r\n    if (task.isDone) {\r\n      return { textDecoration: 'line-through' };\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"task__text\">\r\n        <p style={checkState(task)}>{task.text}</p>\r\n      </div>\r\n      <div className=\"task__actions\">\r\n        <DoneButton task={task} onDone={onDone}></DoneButton>\r\n        <DeleteButton task={task} onDelete={onDelete} />\r\n\r\n        <Link to={`/task/${task.id}`} className=\"task__btn\">\r\n          Edit\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\n\r\n//components\r\nimport Task from '../task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onDone }) => {\r\n  return (\r\n    <div>\r\n      {tasks &&\r\n        tasks.map(task => (\r\n          <Task\r\n            key={task.id}\r\n            task={task}\r\n            onDelete={onDelete}\r\n            onDone={onDone}\r\n          ></Task>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\r\n\r\n// services\r\nimport localstorageService from '../../services/localstorage.service';\r\n\r\n//components\r\nimport Actions from '../actions';\r\nimport AddTask from '../add-task';\r\nimport Tasks from '../tasks';\r\n\r\nexport class Content extends Component {\r\n  state = {\r\n    tasks: []\r\n  };\r\n  componentDidMount() {\r\n    this.loadTasks();\r\n  }\r\n\r\n  loadTasks() {\r\n    const tasks = localstorageService.getData();\r\n\r\n    this.setState({ tasks: tasks ? tasks : [] });\r\n  }\r\n  handleDone = task => {\r\n    const tasks = [...this.state.tasks];\r\n    const index = tasks.indexOf(task);\r\n    tasks[index] = { ...tasks[index] };\r\n    tasks[index].isDone = !tasks[index].isDone;\r\n\r\n    this.setState({ tasks });\r\n    localstorageService.setData(tasks);\r\n  };\r\n\r\n  handleDelete = id => {\r\n    const tasks = [...this.state.tasks];\r\n    const clean_tasks = tasks.filter(task => task.id !== id);\r\n\r\n    this.setState({ tasks: clean_tasks });\r\n    localstorageService.setData(clean_tasks);\r\n  };\r\n\r\n  handleAddTask = text => {\r\n    const task = {\r\n      id: new Date().getTime(),\r\n      text: text,\r\n      isDeleted: false,\r\n      isImportant: false,\r\n      isDone: false,\r\n      comment: '',\r\n      created_at: new Date().toLocaleString(),\r\n      updated_at: new Date().toLocaleString()\r\n    };\r\n    const tasks = [...this.state.tasks, task];\r\n\r\n    this.setState({ tasks });\r\n    localstorageService.setData(tasks);\r\n  };\r\n  handleToggleAllStatus = status => {\r\n    const tasks = this.state.tasks;\r\n\r\n    tasks.map(task => (task.isDone = status));\r\n    this.setState({ tasks });\r\n  };\r\n  handleDeleteAll = () => {\r\n    this.setState({ tasks: [] });\r\n    localstorageService.clear();\r\n  };\r\n  render() {\r\n    const { tasks } = this.state;\r\n    return (\r\n      <div className=\"content\">\r\n        <AddTask OnAddTask={this.handleAddTask} />\r\n        {tasks.length > 0 && (\r\n          <Actions\r\n            onToggleAllStatus={this.handleToggleAllStatus}\r\n            onDeleteAll={this.handleDeleteAll}\r\n          />\r\n        )}\r\n        <Tasks\r\n          tasks={tasks}\r\n          onDelete={this.handleDelete}\r\n          onDone={this.handleDone}\r\n        ></Tasks>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport localstorageService from '../../services/localstorage.service';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport DoneButton from '../buttons/done';\r\nimport DeleteButton from '../buttons/delete';\r\n\r\nexport class TaskDetail extends Component {\r\n  state = {\r\n    task: {\r\n      text: ''\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    await this.populateTask();\r\n  }\r\n  async populateTask() {\r\n    try {\r\n      const id = this.props.match.params.id;\r\n      const task = await this.getTask(id);\r\n\r\n      this.setState({ task });\r\n    } catch (ex) {\r\n      console.log(ex);\r\n\r\n      if (ex.response && ex.response.status === 404)\r\n        return this.props.history.replace('/not-found');\r\n    }\r\n  }\r\n  getTask(id) {\r\n    const tasks = localstorageService.getData();\r\n    const task = tasks.find(task => task.id === Number(id));\r\n    return task;\r\n  }\r\n  handleChange = e => {\r\n    const task = { ...this.state.task };\r\n    const key = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n\r\n    task[key] = value;\r\n    this.setState({ task });\r\n  };\r\n  handleSubmit = event => {\r\n    console.log('submit');\r\n\r\n    event.preventDefault();\r\n    //save\r\n    const tasks = localstorageService.getData();\r\n\r\n    const task = this.state.task;\r\n    task.updated_at = new Date().toLocaleString();\r\n    const index = tasks.findIndex(t => t.id === task.id);\r\n    if (index !== -1) {\r\n      tasks[index] = { ...tasks[index] };\r\n      tasks[index] = task;\r\n      this.setState({ task });\r\n      localstorageService.setData(tasks);\r\n    }\r\n  };\r\n  handleDone = () => {\r\n    const tasks = localstorageService.getData();\r\n    const index = tasks.findIndex(task => task.id === this.state.task.id);\r\n    if (index !== -1) {\r\n      tasks[index] = { ...tasks[index] };\r\n      tasks[index].isDone = !tasks[index].isDone;\r\n      this.setState({ task: tasks[index] });\r\n      localstorageService.setData(tasks);\r\n    }\r\n  };\r\n  handleDelete = id => {\r\n    const tasks = localstorageService.getData();\r\n    const clean_tasks = tasks.filter(task => task.id !== id);\r\n\r\n    this.setState({ tasks: clean_tasks });\r\n    localstorageService.setData(clean_tasks);\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { task } = this.state;\r\n    const { text, comment, created_at, updated_at } = this.state.task;\r\n    return (\r\n      <div>\r\n        <div className=\"mb-10\">\r\n          <Link to=\"/\">Back</Link>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            className=\"form-control mb-10\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={this.handleChange}\r\n          />\r\n          <textarea\r\n            className=\"form-control\"\r\n            name=\"comment\"\r\n            type=\"text\"\r\n            value={comment}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div>\r\n            <DoneButton task={task} onDone={this.handleDone}></DoneButton>\r\n            <DeleteButton task={task} onDelete={this.handleDelete} />\r\n          </div>\r\n          <hr />\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n        <div className=\"mb-10 mt-10\">\r\n          <span>created at :</span>\r\n          <span>{created_at}</span>\r\n        </div>\r\n        <div>\r\n          <span>updated at :</span>\r\n          <span>{updated_at}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskDetail;\r\n","import React from 'react';\r\nconst NotFound = () => {\r\n  return <div>NotFound</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\n//components\r\nimport Footer from './components/footer';\r\nimport Header from './components/header';\r\nimport Content from './components/content';\r\nimport TaskDetail from './components/task-detail';\r\nimport NotFound from './components/not-found';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/task/:id\" component={TaskDetail} />\r\n        <Route path=\"/\" component={Content} />\r\n        <Route path=\"/not-found\" component={NotFound} />\r\n        <Redirect to=\"/not-found\" />\r\n      </Switch>\r\n      {/* <Content /> */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}